# Generated by Django 5.2 on 2025-04-27 10:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Biz haqimizda',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_students', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(10000)])),
                ('number_of_teachers', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(1000)])),
                ('number_0f_partners', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('years_of_experience', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Yutuq',
                'verbose_name_plural': 'Yutuqlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dates_uz', models.TextField()),
                ('dates_ru', models.TextField()),
                ('dates_en', models.TextField()),
                ('dates_de', models.TextField()),
                ('exam_date_uz', models.TextField()),
                ('exam_date_ru', models.TextField()),
                ('exam_date_en', models.TextField()),
                ('exam_date_de', models.TextField()),
                ('requirements_uz', models.TextField()),
                ('requirements_ru', models.TextField()),
                ('requirements_en', models.TextField()),
                ('requirements_de', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name_plural': 'Qabul jarayoni',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdmissionStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField()),
                ('is_finished', models.BooleanField(verbose_name='Jarayonda')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Qabul bosqichlari',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=120)),
                ('phone_number', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message="Noto'g'ri telefon raqami")])),
                ('grade', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11')], help_text='Sinflar (1-11)')),
                ('description', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': "Qabul so'rovlari",
                'ordering': ['-is_read', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('benefits_uz', models.CharField(max_length=200)),
                ('benefits_ru', models.CharField(max_length=200)),
                ('benefits_en', models.CharField(max_length=200)),
                ('benefits_de', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': "Bizning ta'limni foydalari",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Kurs darajalari',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_type_uz', models.IntegerField(blank=True, choices=[(0, "Boshlang'ich"), (1, "O'rta"), (2, 'Yuqori')], null=True)),
                ('school_type_ru', models.IntegerField(blank=True, choices=[(0, 'Начальная'), (1, 'Средняя'), (2, 'Старшая')], null=True)),
                ('school_type_en', models.IntegerField(blank=True, choices=[(0, 'Elementary'), (1, 'Middle'), (2, 'High')], null=True)),
                ('school_type_de', models.IntegerField(blank=True, choices=[(0, 'Grundschule'), (1, 'Mittelschule'), (2, 'Oberschule')], null=True)),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': "O'quv dasturi ",
                'verbose_name_plural': "O'quv dasturlari",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_uz', models.CharField(max_length=255)),
                ('question_ru', models.CharField(max_length=255)),
                ('question_en', models.CharField(max_length=255)),
                ('question_de', models.CharField(max_length=255)),
                ('answer_uz', models.TextField()),
                ('answer_ru', models.TextField()),
                ('answer_en', models.TextField()),
                ('answer_de', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Savol-Javob',
                'verbose_name_plural': 'Savol-Javoblar',
                'ordering': ['question_uz', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_uz', models.IntegerField(blank=True, choices=[(0, 'Hammasi'), (1, 'Maktab Hayoti'), (2, 'Akademik'), (3, 'Sanat va Musiqa'), (4, 'Tadbirlar')], null=True)),
                ('type_ru', models.IntegerField(blank=True, choices=[(0, 'Все'), (1, 'Школьная жизнь'), (2, 'Академический'), (3, 'Искусство и музыка'), (4, 'Мероприятия')], null=True)),
                ('type_en', models.IntegerField(blank=True, choices=[(0, 'All'), (1, 'School Life'), (2, 'Academic'), (3, 'Art & Music'), (4, 'Events')], null=True)),
                ('type_de', models.IntegerField(blank=True, choices=[(0, 'Alle'), (1, 'Schulleben'), (2, 'Akademisch'), (3, 'Kunst & Musik'), (4, 'Veranstaltungen')], null=True)),
                ('image', models.ImageField(upload_to='school/gallery/')),
                ('title_uz', models.CharField(max_length=100)),
                ('title_ru', models.CharField(max_length=100)),
                ('title_en', models.CharField(max_length=100)),
                ('title_de', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Galereya',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('long', models.FloatField(help_text='Kenglik (Longitude)')),
                ('lat', models.FloatField(help_text='Uzunlik (Latitude)')),
                ('address_uz', models.CharField(help_text="Manzil (O'zbekcha)", max_length=255)),
                ('address_ru', models.CharField(help_text='Manzil (Ruscha)', max_length=255)),
                ('address_en', models.CharField(help_text='Manzil (Inglizcha)', max_length=255)),
                ('address_de', models.CharField(help_text='Manzil (Nemischacha)', max_length=255)),
                ('phone_number', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message="Noto'g'ri telefon raqami")])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('telegram_url', models.URLField(verbose_name='Telegram havola')),
                ('insta_url', models.URLField(verbose_name='Instagram havola')),
                ('facebook_url', models.URLField(verbose_name='Facebook havola')),
                ('linkedIn_url', models.URLField(verbose_name='LinkedIN havola')),
                ('x_url', models.URLField(verbose_name='X havola')),
            ],
            options={
                'verbose_name_plural': 'Maktab info',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Journey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=5)),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Bizning sayohat',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('msg', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Murojat',
                'verbose_name_plural': 'Murojatlar',
                'ordering': ['-is_read', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='school/news/')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Yangilik',
                'verbose_name_plural': 'Yangiliklar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='school/sliders/')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Slayder',
                'verbose_name_plural': 'Slayderlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_type_uz', models.CharField(blank=True, choices=[('Asosiy', 'Asosiy'), ('Standart', 'Standart'), ('Premium', 'Premium')], max_length=20)),
                ('sub_type_ru', models.CharField(blank=True, choices=[('Базовый', 'Базовый'), ('Стандартный', 'Стандартный'), ('Премиум', 'Премиум')], max_length=20)),
                ('sub_type_en', models.CharField(blank=True, choices=[('Basic', 'Basic'), ('Standard', 'Standard'), ('Premium', 'Premium')], max_length=20)),
                ('sub_type_de', models.CharField(blank=True, choices=[('Basis', 'Basis'), ('Standard', 'Standard'), ('Premium', 'Premium')], max_length=20)),
                ('monthly_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('yearly_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Obuna',
                'verbose_name_plural': 'Obunalar',
                'ordering': ['sub_type_uz', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_uz', models.CharField(max_length=100)),
                ('first_name_ru', models.CharField(max_length=100)),
                ('first_name_en', models.CharField(max_length=100)),
                ('first_name_de', models.CharField(max_length=100)),
                ('last_name_uz', models.CharField(max_length=100)),
                ('last_name_ru', models.CharField(max_length=100)),
                ('last_name_en', models.CharField(max_length=100)),
                ('last_name_de', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='school/teachers/')),
                ('subject_uz', models.CharField(max_length=255)),
                ('subject_ru', models.CharField(max_length=255)),
                ('subject_en', models.CharField(max_length=255)),
                ('subject_de', models.CharField(max_length=255)),
                ('edu_level_uz', models.CharField(max_length=100)),
                ('edu_level_ru', models.CharField(max_length=100)),
                ('edu_level_en', models.CharField(max_length=100)),
                ('edu_level_de', models.CharField(max_length=100)),
                ('num_of_experience', models.PositiveSmallIntegerField()),
                ('languages', models.CharField(max_length=255)),
                ('bio_uz', models.TextField(blank=True)),
                ('bio_ru', models.TextField(blank=True)),
                ('bio_en', models.TextField(blank=True)),
                ('bio_de', models.TextField(blank=True)),
                ('certifications_uz', models.TextField(blank=True)),
                ('certifications_ru', models.TextField(blank=True)),
                ('certifications_en', models.TextField(blank=True)),
                ('certifications_de', models.TextField(blank=True)),
                ('from_country', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', message="Noto'g'ri telefon raqami")])),
                ('telegram_url', models.URLField(verbose_name='Telegram havola')),
                ('insta_url', models.URLField(verbose_name='Instagram havola')),
                ('facebook_url', models.URLField(verbose_name='Facebook havola')),
                ('linkedIn_url', models.URLField(verbose_name='LinkedIN havola')),
                ('x_url', models.URLField(verbose_name='X havola')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': "O'qituvchi",
                'verbose_name_plural': "O'qituvchilar",
                'ordering': ['last_name_uz', 'first_name_uz'],
            },
        ),
        migrations.CreateModel(
            name='TeachingMethodology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': "O'qitish metodologiyalari",
                'ordering': ['title_uz'],
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': 'Bizning qiymatimiz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('description_uz', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('image', models.ImageField(upload_to='school/courses/')),
                ('duration', models.CharField(default='6 weeks', max_length=100)),
                ('size', models.PositiveSmallIntegerField()),
                ('highlights', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.courselevel')),
            ],
            options={
                'verbose_name': 'Kurs',
                'verbose_name_plural': 'Kurslar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CurriculumSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255)),
                ('title_de', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.curriculum')),
            ],
            options={
                'verbose_name': "O'quv dasturi fanlari",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='school/news/')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.newsitem')),
            ],
            options={
                'verbose_name': 'Yangilik Rasmi',
                'verbose_name_plural': 'Yangilik Rasmlari',
                'ordering': ['-news__created_at'],
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11')], help_text='Sinflar (1-11)')),
                ('day', models.CharField(choices=[('Dushanba', 'Dushanba'), ('Seshanba', 'Seshanba'), ('Chorshanba', 'Chorshanba'), ('Payshanba', 'Payshanba'), ('Juma', 'Juma'), ('Shanba', 'Shanba')], help_text='Hafta kunlari', max_length=12)),
                ('lesson_number', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7')], help_text='Darslar tartibi')),
                ('subject_uz', models.CharField(help_text="Dars fani (O'zbekcha)", max_length=50)),
                ('subject_ru', models.CharField(help_text='Dars fani (Ruscha)', max_length=50)),
                ('subject_en', models.CharField(help_text='Dars fani (Inglizcha)', max_length=50)),
                ('subject_de', models.CharField(help_text='Dars fani (Nemischacha)', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name_plural': 'Dars Jadvali',
                'ordering': ['grade', 'day', 'lesson_number'],
                'unique_together': {('grade', 'day', 'lesson_number')},
            },
        ),
    ]
